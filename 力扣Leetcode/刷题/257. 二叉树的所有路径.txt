/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<String> res = new ArrayList<>();
    public List<String> binaryTreePaths(TreeNode root) {
        StringBuilder str = new StringBuilder();
        if(root==null){
            return res;
        }
        str.append(root.val);
        if(root.left!=null){
            tmp(root.left,new StringBuilder(str.toString()));
        } if(root.right!=null){
            tmp(root.right,new StringBuilder(str.toString()));
        } if(root.left==null&&root.right==null) {
            res.add(str.toString());
        }
        return res;
    }
    private void tmp(TreeNode root,StringBuilder str){
            str.append("->"+root.val);
            if(root.left==null&&root.right==null){
                res.add(str.toString());
                return ;
            }
            if(root.left!=null){
                tmp(root.left,new StringBuilder(str.toString()));
            }
            if(root.right!=null){
                tmp(root.right,new StringBuilder(str.toString()));
            }
    }
}