class Solution {
    public String minWindow(String s, String t) {
        if(t.length()>s.length()){
            return "";
        }
        int left=0,right=0,start=0,len=Integer.MAX_VALUE,vaild=0;
        Counter windows = new Counter();//滑动窗口
        Counter include = new Counter();
        //加入到条件
        for(int i=0;i<t.length();i++){
            include.add(t.charAt(i),1);
        }
        //开始滑动窗口
        while(right<s.length()){
            char c1 = s.charAt(right);
            if(include.containsKey(c1)){
                windows.add(c1,1);
                if(windows.get(c1).intValue()==include.get(c1).intValue()){
                    vaild++;
                }
            }
            right++;

            while(vaild==include.size()){
                if(right-left<len){
                    start=left;
                    len=right-left;
                }
                char c2 = s.charAt(left);
                left++;
                if(include.containsKey(c2)){
                if(windows.get(c2).intValue()==include.get(c2).intValue())
                vaild--;
                windows.add(c2,-1);
                }
            }
        }
        return len==Integer.MAX_VALUE?"":s.substring(start,start+len);
    }
}

class Counter extends HashMap<Character,Integer>{
    public Integer get(Character key){
        return containsKey(key)?super.get(key):0;
    }
    public void add(Character key ,Integer v){
        put(key,get(key)+v);
    }
}