class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        if(nums.length==0){
            result[0]=-1;
            result[1]=-1;
            return result;
        }
        result[0]=findLeft(nums,nums.length,target);
        result[1]=findRight(nums,nums.length,target);
        return result;
    }

    public int findLeft(int[] nums,int len,int key){
        int left = 0,right = len,res=-1,mid;
        while(left<right){
                mid = left+(right-left)/2;
                if(key==nums[mid]){
                    res=mid;
                    right = mid;
                }else if(key>nums[mid]){
                    left=mid+1;
                }else if(key<nums[mid]){
                    right = mid;
                }
        }
        return res;
    }
    public int findRight(int[] nums,int len ,int key){
         int left = 0,right = len,res=-1,mid;
         while(left<right){
            mid = left+(right-left)/2;
            if(key==nums[mid]){
                res = mid;
                left = mid+1;
            }else if (key > nums[mid]){
                left = mid+1;
            }else if(key < nums[mid]){
                right = mid;
            }
         }
         return res;
    }
}