/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> res = new ArrayList<>();
    LinkedList<Integer> list = new LinkedList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        helper(root,targetSum);
        return res;
    }
    private void helper(TreeNode root,int targetSum){
        if ( root == null){
            return ;
        }
        if ( root.left == null && root.right == null && targetSum - root.val ==0){
            list.add(root.val);
            res.add((List<Integer>)list.clone());
            list.removeLast();
            return ;
        }
        list.add(root.val);
        helper(root.left,targetSum-root.val);
        helper(root.right,targetSum-root.val);
        list.removeLast();
    }
}