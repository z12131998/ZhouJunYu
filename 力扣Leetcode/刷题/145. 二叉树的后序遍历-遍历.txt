/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> res = new ArrayList<Integer>();
    Stack<TreeNode> stack = new Stack<TreeNode>();
    TreeNode tmp;
    public List<Integer> postorderTraversal(TreeNode root) {
       while(root!=null||!stack.isEmpty()){
           while(root!=null){
               stack.push(root);
               root=root.left;
           }
           root=stack.pop();//获取左Null前一个节点
           if(root.right==null||root.right==tmp){
               res.add(root.val);
               tmp=root;
               root=null;
           }else{
           stack.push(root);
            root=root.right;}
       }
       return res;
    }
}