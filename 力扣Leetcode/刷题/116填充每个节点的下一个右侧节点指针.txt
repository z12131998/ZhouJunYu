/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/

class Solution {
    public Node connect(Node root) {
        if(root==null){
            return root;
        }
        neibu(root.left,root.right);
        return root;
        
    }
    private void neibu(Node left,Node right){  //使用一个内部函数,让他们进行合并
            if(left==null||right==null){
                return ;
            }
            left.next=right;
            neibu(left.left,left.right);
            neibu(left.right,right.left);
            neibu(right.left,right.right);
    }
}