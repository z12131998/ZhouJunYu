/*
*
给定一个非空且只包含非负数的整数数组 nums，数组的度的定义是指数组里任一元素出现频数的最大值。

你的任务是在 nums 中找到与 nums 拥有相同大小的度的最短连续子数组，返回其长度。
/

class Solution {
    public int findShortestSubArray(int[] nums) {
        Map<Integer,int[]> map = new HashMap<Integer,int[]>();
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(nums[i])){
                map.get(nums[i])[0]++;
                 map.get(nums[i])[2]=i;
                continue;
            }
            map.put(nums[i],new int[]{1,i,i});
        }
        int max=0,minLen=0;
        for(Map.Entry<Integer, int[]> entry : map.entrySet()){
             int[] arr = entry.getValue();
             if(max<arr[0]){
                 max=arr[0];
                 minLen=1+arr[2]-arr[1];
             }else if(max==arr[0]){
                 minLen=Math.min(arr[2]-arr[1]+1,minLen);
             }
        }
        return minLen;
    }
}