/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==0){
            return null;
        }
        if(lists.length==1){
            return lists[0];
        }
        ListNode res = new ListNode(-1),tmp;
        ListNode A= res,B=lists[0];
        for(int i = 1;i<lists.length;i++){
            tmp=lists[i];
            while(B!=null&&tmp!=null){
                if(B.val>tmp.val){
                    A.next=tmp;
                    A=A.next;
                    tmp=tmp.next;
                }else{
                     A.next=B;
                    A=A.next;
                    B=B.next;
                }
              
            }
            A.next=tmp==null?B:tmp;
            B=res.next;
            A=res;
        }
        
        return res.next;
    }
}